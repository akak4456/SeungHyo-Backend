version: '3'
services:
  seunghyo-mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${ROOT_DEV_PASSWORD}
      MYSQL_USER: ${SEUNGHYO_DEV_DB_USERNAME}
      MYSQL_PASSWORD: ${SEUNGHYO_DEV_DB_PASSWORD}
      TZ: Asia/Seoul
    volumes:
      - mysql-data:/var/lib/mysql
      - ./initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 10s
      retries: 10
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
    ports:
      - "3307:3306"
  seunghyo-redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - "6399:6379"
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LOG_RETENTION_HOURS: 24  # 메시지 보유 기간을 1일로 설정
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock


volumes:
  mysql-data:
    driver: local
  redis_data:
    driver: local